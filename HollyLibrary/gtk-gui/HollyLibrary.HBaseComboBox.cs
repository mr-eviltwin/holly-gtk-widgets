
// This file has been generated by the GUI designer. Do not modify.
namespace HollyLibrary
{
	public partial class HBaseComboBox
	{
		private global::Gtk.HBox hbox3;
		private global::Gtk.HBox hbox4;
		private global::Gtk.Entry entry;
		private global::Gtk.Button popupButton;
		private global::Gtk.Arrow arrow1;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget HollyLibrary.HBaseComboBox
			global::Stetic.BinContainer.Attach (this);
			this.Name = "HollyLibrary.HBaseComboBox";
			// Container child HollyLibrary.HBaseComboBox.Gtk.Container+ContainerChild
			this.hbox3 = new global::Gtk.HBox ();
			this.hbox3.Name = "hbox3";
			// Container child hbox3.Gtk.Box+BoxChild
			this.hbox4 = new global::Gtk.HBox ();
			this.hbox4.Name = "hbox4";
			this.hbox4.Spacing = 2;
			this.hbox4.BorderWidth = ((uint)(5));
			// Container child hbox4.Gtk.Box+BoxChild
			this.entry = new global::Gtk.Entry ();
			this.entry.CanFocus = true;
			this.entry.Name = "entry";
			this.entry.IsEditable = true;
			this.entry.HasFrame = false;
			this.entry.InvisibleChar = '‚óè';
			this.hbox4.Add (this.entry);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.entry]));
			w1.Position = 0;
			this.hbox3.Add (this.hbox4);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.hbox4]));
			w2.Position = 0;
			// Container child hbox3.Gtk.Box+BoxChild
			this.popupButton = new global::Gtk.Button ();
			this.popupButton.WidthRequest = 28;
			this.popupButton.CanFocus = true;
			this.popupButton.Name = "popupButton";
			// Container child popupButton.Gtk.Container+ContainerChild
			this.arrow1 = new global::Gtk.Arrow (((global::Gtk.ArrowType)(1)), ((global::Gtk.ShadowType)(2)));
			this.arrow1.Name = "arrow1";
			this.popupButton.Add (this.arrow1);
			this.popupButton.Label = null;
			this.hbox3.Add (this.popupButton);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.popupButton]));
			w4.Position = 1;
			w4.Expand = false;
			this.Add (this.hbox3);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.entry.FocusInEvent += new global::Gtk.FocusInEventHandler (this.OnEntryFocusInEvent);
			this.entry.FocusOutEvent += new global::Gtk.FocusOutEventHandler (this.OnEntryFocusOutEvent);
		}
	}
}
